substitutions:
  name: wyze-plug
  friendly_name: Wyze Plug
esphome:
  name: $name
  comment: "Wyze Plug"
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: esphome.project-template
    version: "1.0"
esp8266:
  board: esp01_1m
# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:
# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://cpyarger/esphome-templates/wyze-plug.yaml@main

wifi:
  # Set up a wifi access point
  ap:
    password: "12345678"
# Sets up the improv via serial client for Wi-Fi provisioning
improv_serial:
# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:
web_server:
  port: 80
status_led:
    pin: 
      number: GPIO05
      inverted: true 
# The commented out code below is used to make the output a binary light instead of a switch
binary_sensor:
  - platform: gpio
    pin: 14
    id: button
    internal: true
    on_press:
      then:
        - switch.toggle: switch_1
#        - light.toggle: light_1
switch:
  - platform: gpio
    name: "$friendly_name Switch"
    pin: 12
    id: switch_1
#light:
#  - platform: binary
#    name: "$friendly_name Light"
#    output: relay_1
#    id: light_1
#output:
#  - platform: gpio
#    pin: 12
#    id: relay_1

